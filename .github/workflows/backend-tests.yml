name: Backend Tests

on:
  pull_request:
    branches: ["**"]
    paths:
      - 'backend/**'
      - 'CodeCoverage.runsettings'
      - '.github/workflows/backend-tests.yml'
  push:
    branches: ["main", "develop"]
    paths:
      - 'backend/**'
      - 'CodeCoverage.runsettings'
      - '.github/workflows/backend-tests.yml'

jobs:
  test-user-service:
    name: Test User Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      
      - name: Restore dependencies
        run: dotnet restore backend-user.tests/backend-user.tests.csproj
        working-directory: ./backend
      
      - name: Build
        run: dotnet build backend-user.tests/backend-user.tests.csproj --no-restore
        working-directory: ./backend
      
      - name: Test
        run: |
          dotnet test backend-user.tests/backend-user.tests.csproj --no-build --verbosity normal \
            --collect:"XPlat Code Coverage" \
            --results-directory:"./TestResults/User" \
            --settings:"../CodeCoverage.runsettings"
        working-directory: ./backend
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: user-service-test-results
          path: backend/TestResults/User/

  test-messages-service:
    name: Test Messages Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      
      - name: Restore dependencies
        run: dotnet restore backend-messages.tests/backend-messages.tests.csproj
        working-directory: ./backend
      
      - name: Build
        run: dotnet build backend-messages.tests/backend-messages.tests.csproj --no-restore
        working-directory: ./backend
      
      - name: Test
        run: |
          dotnet test backend-messages.tests/backend-messages.tests.csproj --no-build --verbosity normal \
            --collect:"XPlat Code Coverage" \
            --results-directory:"./TestResults/Messages" \
            --settings:"../CodeCoverage.runsettings"
        working-directory: ./backend
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: messages-service-test-results
          path: backend/TestResults/Messages/

  test-portfolio-service:
    name: Test Portfolio Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      
      - name: Restore dependencies
        run: dotnet restore backend-portfolio.tests/backend-portfolio.tests.csproj
        working-directory: ./backend
      
      - name: Build
        run: dotnet build backend-portfolio.tests/backend-portfolio.tests.csproj --no-restore
        working-directory: ./backend
      
      - name: Test
        run: |
          dotnet test backend-portfolio.tests/backend-portfolio.tests.csproj --no-build --verbosity normal \
            --collect:"XPlat Code Coverage" \
            --results-directory:"./TestResults/Portfolio" \
            --settings:"../CodeCoverage.runsettings"
        working-directory: ./backend
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: portfolio-service-test-results
          path: backend/TestResults/Portfolio/

  test-ai-service:
    name: Test AI Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      
      - name: Restore dependencies
        run: dotnet restore backend-AI.tests/backend-AI.tests.csproj
        working-directory: ./backend
      
      - name: Build
        run: dotnet build backend-AI.tests/backend-AI.tests.csproj --no-restore
        working-directory: ./backend
      
      - name: Test
        run: |
          dotnet test backend-AI.tests/backend-AI.tests.csproj --no-build --verbosity normal \
            --collect:"XPlat Code Coverage" \
            --results-directory:"./TestResults/AI" \
            --settings:"../CodeCoverage.runsettings"
        working-directory: ./backend
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ai-service-test-results
          path: backend/TestResults/AI/

  build-backend-services:
    name: Build Backend Services
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      
      - name: Restore and Build User Service
        run: |
          dotnet restore backend-user/backend-user.csproj
          dotnet build backend-user/backend-user.csproj --no-restore
        working-directory: ./backend
      
      - name: Restore and Build Messages Service
        run: |
          dotnet restore backend-messages/backend-messages.csproj
          dotnet build backend-messages/backend-messages.csproj --no-restore
        working-directory: ./backend
      
      - name: Restore and Build Portfolio Service
        run: |
          dotnet restore backend-portfolio/backend-portfolio.csproj
          dotnet build backend-portfolio/backend-portfolio.csproj --no-restore
        working-directory: ./backend
      
      - name: Restore and Build AI Service
        run: |
          dotnet restore backend-AI/backend-AI.csproj
          dotnet build backend-AI/backend-AI.csproj --no-restore
        working-directory: ./backend

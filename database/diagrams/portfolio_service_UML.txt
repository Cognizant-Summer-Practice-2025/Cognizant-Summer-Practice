@startuml Portfolio_Service_Schema

!define PRIMARY_KEY(x) <b><color:#b8861b><&key></color> x</b>
!define FOREIGN_KEY(x) <color:#aaaaaa><&arrow-right></color> x
!define EXTERNAL_REF(x) <color:#red><&warning></color> x

' === PORTFOLIO SERVICE WITH CONFIGURABLE COMPONENTS ===

entity "portfolios" as portfolios {
  PRIMARY_KEY(id) : UUID
  --
  EXTERNAL_REF(user_id) : UUID
  FOREIGN_KEY(template_id) : UUID
  title : VARCHAR
  bio : TEXT
  view_count : INTEGER
  like_count : INTEGER
  visibility : INTEGER
  is_published : BOOLEAN
  <color:#green>components : TEXT</color>
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
  --
  note: visibility enum values
  0=Public, 1=Private, 2=Unlisted
  --
  note: components field stores JSON
  serialized ComponentConfig[]
  with order and visibility settings
}

entity "portfolio_templates" as templates {
  PRIMARY_KEY(id) : UUID
  --
  name : VARCHAR UNIQUE
  description : TEXT
  preview_image_url : TEXT
  is_active : BOOLEAN
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

entity "projects" as projects {
  PRIMARY_KEY(id) : UUID
  --
  FOREIGN_KEY(portfolio_id) : UUID
  title : VARCHAR
  description : TEXT
  image_url : TEXT
  demo_url : TEXT
  github_url : TEXT
  technologies : TEXT[]
  featured : BOOLEAN
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

entity "experience" as experience {
  PRIMARY_KEY(id) : UUID
  --
  FOREIGN_KEY(portfolio_id) : UUID
  job_title : VARCHAR
  company_name : VARCHAR
  start_date : DATE
  end_date : DATE
  is_current : BOOLEAN
  description : TEXT
  skills_used : TEXT[]
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

entity "skills" as skills {
  PRIMARY_KEY(id) : UUID
  --
  FOREIGN_KEY(portfolio_id) : UUID
  name : VARCHAR
  category : VARCHAR
  proficiency_level : INTEGER
  display_order : INTEGER
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

entity "blog_posts" as blog_posts {
  PRIMARY_KEY(id) : UUID
  --
  FOREIGN_KEY(portfolio_id) : UUID
  title : VARCHAR
  excerpt : TEXT
  content : TEXT
  featured_image_url : TEXT
  tags : TEXT[]
  is_published : BOOLEAN
  published_at : TIMESTAMP
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

entity "bookmarks" as bookmarks {
  PRIMARY_KEY(id) : UUID
  --
  EXTERNAL_REF(user_id) : UUID
  FOREIGN_KEY(portfolio_id) : UUID
  collection_name : VARCHAR
  notes : TEXT
  created_at : TIMESTAMP
}

note top of portfolios : **Component Configuration**\nThe components field stores JSON array:\n[{\n  "id": "experience-1",\n  "type": "experience",\n  "order": 1,\n  "isVisible": true,\n  "settings": {}\n}, ...]\n\nSupported component types:\n• experience\n• projects\n• skills\n• blog_posts\n• contact\n• about

' Portfolio relationships (Many portfolios can use one template)
portfolios }o--|| templates : "uses template"
portfolios ||--o{ projects : "showcases"
portfolios ||--o{ experience : "includes"
portfolios ||--o{ skills : "has"
portfolios ||--o{ blog_posts : "writes"
portfolios ||--o{ bookmarks : "bookmarked_as"

note bottom : **API Changes & Enhancements**\n• POST /api/Portfolio - accepts templateName instead of templateId\n• Backend finds template by name automatically\n• Templates seeded with: Gabriel Bârzu, Modern, Creative, Professional\n• Components field stores JSON configuration\n\n**Frontend Updates**\n• ComponentOrdering UI component\n• Settings page with component management\n• Template loading by ID (maps to backend names)\n• Simplified template structure (no componentName)

@enduml
"use client"

import { useState } from "react"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Button } from "@/components/ui/button"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { SkillTag } from "./skill-tag"
import { Skill } from "@/lib/portfolio"

export function PortfolioInformation() {
  const [skills, setSkills] = useState<Skill[]>([
    {
      id: '1',
      portfolioId: 'mock-portfolio-id',
      name: 'React',
      category: 'Frontend',
      proficiencyLevel: 90,
      displayOrder: 1,
      createdAt: '2024-01-15T10:00:00Z',
      updatedAt: '2024-01-15T10:00:00Z'
    },
    {
      id: '2',
      portfolioId: 'mock-portfolio-id',
      name: 'Node.js',
      category: 'Backend',
      proficiencyLevel: 85,
      displayOrder: 2,
      createdAt: '2024-01-15T10:00:00Z',
      updatedAt: '2024-01-15T10:00:00Z'
    },
    {
      id: '3',
      portfolioId: 'mock-portfolio-id',
      name: 'TypeScript',
      category: 'Frontend',
      proficiencyLevel: 88,
      displayOrder: 3,
      createdAt: '2024-01-15T10:00:00Z',
      updatedAt: '2024-01-15T10:00:00Z'
    },
    {
      id: '4',
      portfolioId: 'mock-portfolio-id',
      name: 'GraphQL',
      category: 'Backend',
      proficiencyLevel: 75,
      displayOrder: 4,
      createdAt: '2024-01-15T10:00:00Z',
      updatedAt: '2024-01-15T10:00:00Z'
    }
  ])
  
  const [newSkill, setNewSkill] = useState("")
  const [newCategory, setNewCategory] = useState("Frontend")
  const [newProficiency, setNewProficiency] = useState(50)
  
  const categories = ['Frontend', 'Backend', 'Database', 'DevOps', 'Mobile', 'Design', 'Other']

  const addSkill = () => {
    if (newSkill.trim() && !skills.some(skill => skill.name.toLowerCase() === newSkill.trim().toLowerCase())) {
      const newSkillObj: Skill = {
        id: Date.now().toString(), // In real app, this would be generated by backend
        portfolioId: 'mock-portfolio-id',
        name: newSkill.trim(),
        category: newCategory,
        proficiencyLevel: newProficiency,
        displayOrder: skills.length + 1,
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString()
      };
      setSkills([...skills, newSkillObj]);
      setNewSkill("");
      setNewProficiency(50);
    }
  }

  const removeSkill = (skillId: string) => {
    setSkills(skills.filter(skill => skill.id !== skillId))
  }

  const updateSkillProficiency = (skillId: string, newLevel: number) => {
    setSkills(skills.map(skill => 
      skill.id === skillId 
        ? { ...skill, proficiencyLevel: newLevel, updatedAt: new Date().toISOString() }
        : skill
    ));
  }

  return (
    <div className="w-full pb-6 md:pb-8 flex flex-col gap-4 md:gap-6">
      <div className="flex flex-col">
        <h2 className="text-slate-900 text-xl md:text-2xl font-semibold">Portfolio Information</h2>
      </div>
      
      <div className="px-4 py-4 md:px-6 md:py-6 bg-white rounded-lg border border-slate-200 flex flex-col gap-4 md:gap-6">
        <div className="flex flex-col gap-2">
          <Label htmlFor="title" className="text-slate-900 text-sm font-medium">
            Portfolio Title
          </Label>
          <Input
            id="title"
            defaultValue="Alex Johnson - Full Stack Developer"
            className="p-3 rounded-lg border border-slate-200"
          />
        </div>

        <div className="flex flex-col gap-2">
          <Label htmlFor="description" className="text-slate-900 text-sm font-medium">
            Description
          </Label>
          <Textarea
            id="description"
            defaultValue="Crafting digital experiences with modern web technologies"
            className="p-3 rounded-lg border border-slate-200 min-h-[60px] md:min-h-[80px]"
          />
        </div>

        <div className="flex flex-col gap-4">
          <Label className="text-slate-900 text-sm font-medium">
            Skills & Technologies
          </Label>
          
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3 p-4 bg-gray-50 rounded-lg">
            <div className="flex flex-col gap-2">
              <label className="text-sm font-medium text-gray-700">Skill Name</label>
              <Input
                value={newSkill}
                onChange={(e) => setNewSkill(e.target.value)}
                placeholder="e.g. React"
                className="w-full"
                onKeyPress={(e) => e.key === 'Enter' && addSkill()}
              />
            </div>
            
            <div className="flex flex-col gap-2">
              <label className="text-sm font-medium text-gray-700">Category</label>
              <Select value={newCategory} onValueChange={setNewCategory}>
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  {categories.map((category) => (
                    <SelectItem key={category} value={category}>
                      {category}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>
            
            <div className="flex flex-col gap-2">
              <label className="text-sm font-medium text-gray-700">Proficiency ({newProficiency}%)</label>
              <input
                type="range"
                min="1"
                max="100"
                value={newProficiency}
                onChange={(e) => setNewProficiency(Number(e.target.value))}
                className="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer"
              />
            </div>
            
            <div className="flex flex-col gap-2 justify-end">
              <Button
                onClick={addSkill}
                className="w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white text-sm font-normal rounded-lg"
              >
                Add Skill
              </Button>
            </div>
          </div>

          <div className="flex flex-wrap gap-2 pt-2">
            {skills.map((skill) => (
              <SkillTag 
                key={skill.id} 
                skill={skill} 
                onRemove={removeSkill}
                onUpdateProficiency={updateSkillProficiency}
                showDetails={true}
              />
            ))}
          </div>
        </div>
      </div>
    </div>
  )
} 